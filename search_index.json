[["counting-more-systems.html", "14 Counting More Systems 14.1 Counting Kinds of Storms 14.2 Counting All Types of Systems", " 14 Counting More Systems In the two previous chapters you learned how to count the number of tropical systems in each year, and how to graph a barchart of such counts. In this chapter, we continue discussing how to obtain more counts. Specifically, we describe how to get the frequencies of say tropical depressions, or tropical storms, or hurricanes, or major hurricanes. 14.1 Counting Kinds of Storms Recall that tropical systems are classified into different categories depending on their wind speed. This classification is based on the famous Saffir-Simpson wind scale, given in the following table. Table: Saffir-Simpson scale Category Scale knots (kn) mph Tropical Depression -1 \\(&lt;=\\) 33 \\(&lt;=\\) 38 Tropical Storm 0 34 - 63 39 - 73 Hurricane category 1 1 64 - 82 74 - 95 Hurricane category 2 2 83 - 95 96 - 110 Hurricane category 3 3 96 - 112 111 - 129 Hurricane category 4 4 113 - 136 130 - 156 Hurricane category 5 5 \\(&gt;=\\) 137 \\(&gt;=\\) 157 Hurricanes of categories 3, 4, and 5 are considered to be major hurricanes. 14.1.1 Counting Tropical Depressions We may start by getting the count of tropical depressions per year. Knowing that tropical depressions have winds no greater than 33 knots, we can filter() column wind for this numeric value. # trying to count tropical depressions per year depression_counts_per_year = storms %&gt;% filter(wind &lt;= 33) %&gt;% count(year, name) %&gt;% count(year) # inspect a few rows head(depression_counts_per_year) ## # A tibble: 6 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 1975 2 ## 2 1976 2 ## 3 1977 3 ## 4 1978 4 ## 5 1979 7 ## 6 1980 6 According to this output, it seems that there were 2 tropical depressions in 1975, 2 in 1976, 3 in 1977, etc. What about the number of tropical storms? Well, to obtain this count we should filter wind values between 34 and 63 knots, and then compute the count(): # trying to count tropical storms per year storm_counts_per_year = storms %&gt;% filter(wind &gt;= 34 &amp; wind &lt; 64) %&gt;% count(year, name) %&gt;% count(year) # inspect a few rows head(storm_counts_per_year) ## # A tibble: 6 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 1975 3 ## 2 1976 2 ## 3 1977 3 ## 4 1978 4 ## 5 1979 7 ## 6 1980 7 Based on this output, it seems that there were 3 tropical storms in 1975, 2 in 1976, 3 in 1977, etc. But wait … We know, from the preceding chapter, that the counts of systems per year are: system_counts_per_year &lt;- storms %&gt;% count(year, name) %&gt;% count(year) head(system_counts_per_year) ## # A tibble: 6 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 1975 3 ## 2 1976 2 ## 3 1977 3 ## 4 1978 4 ## 5 1979 7 ## 6 1980 8 How come is it that in 1975 there were two tropical depressions, and also two tropical storms, but a total of three systems? Likewise, how is it that in 1976 there were also two tropical depressions, and two tropical storms, but a total of only two systems? Okay, okay. You may know the answer to this apparent conundrum. The explanation for these seemingly contradictory results has to do with the life cycle of tropical systems. Technically speaking, they all start as baby storms or disturbances that can get bigger, eventually reaching tropical depression status, and under the right weather conditions, they can continue to grow reaching tropical storm category, or hurricane of category 1, or other bigger categories. I know that the above outputs and the interpretations I’m providing for them may seem a bit silly to (some of) you. Yes, I’m doing it on purpose: to walk you through the type of exploration, sanity checks, and questions that you should be asking yourself along the way when analyzing data. This is especially vital when you are working with a data set from some topic or field in which you don’t much experience with. A more adequate approach for identifying tropical depressions consists of first obtaining the maximum wind speed of each system, and then filtering for values of 33 knots or less. # identifying tropical depressions depressions = storms %&gt;% group_by(year, name) %&gt;% summarise(wind_max = max(wind), .groups = &quot;drop&quot;) %&gt;% filter(wind_max &lt;= 33) slice_head(depressions, n = 10) ## # A tibble: 10 × 3 ## year name wind_max ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; ## 1 1991 AL041991 30 ## 2 1991 AL101991 25 ## 3 1992 AL021992 30 ## 4 1992 AL031992 30 ## 5 1992 AL081992 30 ## 6 1993 AL011993 30 ## 7 1993 AL101993 30 ## 8 1994 AL021994 30 ## 9 1994 AL051994 30 ## 10 1994 AL081994 30 Having obtained the data that exclusively contains tropical depressions, we can then count their number in each year: # counting tropical depressions per year depression_counts_per_year = depressions %&gt;% count(year) slice_head(depression_counts_per_year, n = 10) ## # A tibble: 10 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 1991 2 ## 2 1992 3 ## 3 1993 2 ## 4 1994 5 ## 5 1995 2 ## 6 1997 1 ## 7 1999 4 ## 8 2000 4 ## 9 2001 2 ## 10 2002 2 14.1.2 Counting Tropical Storms Tropical storms are tropical systems with wind speeds between 39 mph and 73 mph or equivalently, between 34 and 63 knots. With this information, we proceed in the same way as in the above subsection: first we identify the set that exclusively contains tropical storms, and then we count them by year. # identifying tropical storms trop_storms = storms %&gt;% group_by(year, name) %&gt;% summarise(wind_max = max(wind), .groups = &quot;drop&quot;) %&gt;% filter(wind_max &gt;= 34 &amp; wind_max &lt; 64) slice_head(trop_storms, n = 10) ## # A tibble: 10 × 3 ## year name wind_max ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; ## 1 1975 Amy 60 ## 2 1978 Amelia 45 ## 3 1978 Bess 45 ## 4 1978 Juliet 45 ## 5 1979 Ana 50 ## 6 1979 Claudette 45 ## 7 1980 Danielle 50 ## 8 1980 Hermine 60 ## 9 1982 Beryl 60 ## 10 1982 Chris 55 # counting tropical storms per year storm_counts_per_year = trop_storms %&gt;% count(year) slice_head(storm_counts_per_year, n = 10) ## # A tibble: 10 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 1975 1 ## 2 1978 3 ## 3 1979 2 ## 4 1980 2 ## 5 1982 3 ## 6 1983 1 ## 7 1984 5 ## 8 1985 4 ## 9 1986 2 ## 10 1987 1 So far, so good. Things seem to make sense, and we are making nice progress in our data exploration journey. But before moving on with other counts, let’s do a quick sanity check (just in case). For example, we could take into consideration the column category. This column contains numeric codes for the different types of categories based on the Saffir-Simpson wind scale. To be more precise: in addition to wind_max, let’s also include the maximum category value when identifying the set of tropical storms. If everything is correct, all the entries should have category value of 0 which is the numeric code for tropical storms. # identifying tropical storms trop_storms = storms %&gt;% group_by(year, name) %&gt;% summarise( wind_max = max(wind), categ_max = max(category), .groups = &quot;drop&quot;) %&gt;% filter(wind_max &gt;= 34 &amp; wind_max &lt; 64) slice_head(trop_storms, n = 10) ## # A tibble: 10 × 4 ## year name wind_max categ_max ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;ord&gt; ## 1 1975 Amy 60 0 ## 2 1978 Amelia 45 0 ## 3 1978 Bess 45 0 ## 4 1978 Juliet 45 0 ## 5 1979 Ana 50 0 ## 6 1979 Claudette 45 0 ## 7 1980 Danielle 50 0 ## 8 1980 Hermine 60 0 ## 9 1982 Beryl 60 0 ## 10 1982 Chris 55 0 This output only displays the first ten rows, but you are welcome to inspect the values in column categ_max to confirm that all of them are 0. Did you observe anything special? Was there anything that caught your attention? If your answer is “No”, then go back to carefully inspect the content of trop_storms. If your answer is “Yes”, because you noticed some weird storm names such as AL031987 or AL061988, then let me say to you: “good job!” Indeed, there seem to be a few tropical storms (category 0) that don’t have a proper name. In theory, once a tropical system reaches tropical storm status, it receives a non-alphanumeric name such as Amy or Amelia or Bes. To detect all the entries in trop_storms that don’t have a proper name you can use the following command: # unnamed storms trop_storms %&gt;% filter(str_starts(name, pattern = &quot;A(l|L)\\\\d+&quot;)) ## # A tibble: 4 × 4 ## year name wind_max categ_max ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;ord&gt; ## 1 1987 AL031987 40 0 ## 2 1988 AL061988 50 0 ## 3 2006 AL022006 45 0 ## 4 2011 Al202011 40 0 As you can tell, this command is a filtering operation. However, the code inside filter() is somewhat advanced. It uses the str_starts() function to match for those names that start with either \"AL\" or \"Al\" and are followed by several digits. To be honest, I’m not sure why we have these mismatched values. It could be that the category values for these systems are incorrect. Or it could the opposite: the category is okay, but the problem is with the name values. 14.2 Counting All Types of Systems So far we’ve found a satisfying way to count the number of tropical depressions as well as the number of tropical storms. We could adapt the recent commands to get a table with counts of hurricanes of category 1, another table for hurricanes of category 2, and so on and so for. Interestingly, we can also identify the maximum category for each type of system, all at once. All we have to do is remove the filter() command, as follows: system_status = storms %&gt;% group_by(year, name) %&gt;% summarise( wind_max = max(wind), categ_max = max(category), .groups = &quot;drop&quot;) slice_head(system_status, n = 10) ## # A tibble: 10 × 4 ## year name wind_max categ_max ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;ord&gt; ## 1 1975 Amy 60 0 ## 2 1975 Caroline 100 3 ## 3 1975 Doris 95 2 ## 4 1976 Belle 105 3 ## 5 1976 Gloria 90 2 ## 6 1977 Anita 150 5 ## 7 1977 Clara 65 1 ## 8 1977 Evelyn 70 1 ## 9 1978 Amelia 45 0 ## 10 1978 Bess 45 0 We can take a further step and add a column that displays the category status in text form. That is, for categ_max == -1 have an associated value of \"depression\"; for categ_max == 0 have an associated value of \"storm\"; for categ_max == 1 have an associated value of \"hurr1\", etc. How can you accomplish this? One nice option is with the case_when() function. Let’s take a look at the command that gets the job done, and then we discuss it. # adding a wind category status in text format system_status = storms %&gt;% group_by(year, name) %&gt;% summarise( wind_max = max(wind), wind_scale = max(category), .groups = &quot;drop&quot;) %&gt;% mutate(wind_categ = case_when( wind_scale == 5 ~ &quot;hurr5&quot;, wind_scale == 4 ~ &quot;hurr4&quot;, wind_scale == 3 ~ &quot;hurr3&quot;, wind_scale == 2 ~ &quot;hurr2&quot;, wind_scale == 1 ~ &quot;hurr1&quot;, wind_scale == 0 ~ &quot;storm&quot;, wind_scale == -1 ~ &quot;depression&quot;, )) slice_head(system_status, n = 10) ## # A tibble: 10 × 5 ## year name wind_max wind_scale wind_categ ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;ord&gt; &lt;chr&gt; ## 1 1975 Amy 60 0 storm ## 2 1975 Caroline 100 3 hurr3 ## 3 1975 Doris 95 2 hurr2 ## 4 1976 Belle 105 3 hurr3 ## 5 1976 Gloria 90 2 hurr2 ## 6 1977 Anita 150 5 hurr5 ## 7 1977 Clara 65 1 hurr1 ## 8 1977 Evelyn 70 1 hurr1 ## 9 1978 Amelia 45 0 storm ## 10 1978 Bess 45 0 storm To describe how case_when() works, let’s pay attention to the part of the code that involves this command: case_when( wind_scale == 5 ~ &quot;hurr5&quot;, wind_scale == 4 ~ &quot;hurr4&quot;, wind_scale == 3 ~ &quot;hurr3&quot;, wind_scale == 2 ~ &quot;hurr2&quot;, wind_scale == 1 ~ &quot;hurr1&quot;, wind_scale == 0 ~ &quot;storm&quot;, wind_scale == -1 ~ &quot;depression&quot;, ) As you can tell, the input to case_when() consists of multiple conditions based on the variable wind_scale. The first condition is: wind_scale == 5 ~ &quot;hurr5&quot; This means that the text \"hurr5\" will be associated to all the wind_scale values equal to 5. Basically, this indicates a hurricane of category 5. Observe also the use of the tilde ~ to indicate the output for each text value. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
